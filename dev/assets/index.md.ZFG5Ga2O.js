import{_ as n,C as e,c as l,o,j as i,G as r,ai as p,a as t}from"./chunks/framework.DEaZx5le.js";const f=JSON.parse('{"title":"UncertaintyQuantification.jl","description":"","frontmatter":{"authors":[{"name":"Jasper Behrensdorf","platform":"github","link":"https://github.com/FriesischScott"},{"name":"Matteo Broggi","platform":"github","link":"https://github.com/teobros"},{"name":"Lukas Fritsch","platform":"github","link":"https://github.com/lukasfritsch"},{"name":"Ander Gray","platform":"github","link":"https://github.com/AnderGray"},{"name":"Jan Grashorn","platform":"github","link":"https://github.com/jgrashorn"},{"name":"Laurenz Knipper","platform":"github","link":"https://github.com/sitoryu"},{"name":"Max Luttmann","platform":"github","link":"https://github.com/mlsuh"},{"name":"Felix Mett","platform":"github","link":"https://github.com/Cr0gan"},{"name":"Andrea Perin","platform":"github","link":"https://github.com/andreaperin"},{"name":"Thomas Potthast","platform":"github","link":"https://github.com/potthastT"}]},"headers":[],"relativePath":"index.md","filePath":"index.md","lastUpdated":null}'),h={name:"index.md"};function u(c,a,d,k,g,m){const s=e("Authors");return o(),l("div",null,[a[0]||(a[0]=i("h1",{id:"uncertaintyquantification-jl",tabindex:"-1"},[t("UncertaintyQuantification.jl "),i("a",{class:"header-anchor",href:"#uncertaintyquantification-jl","aria-label":'Permalink to "UncertaintyQuantification.jl"'},"​")],-1)),a[1]||(a[1]=i("p",null,"A Julia package for uncertainty quantification.",-1)),a[2]||(a[2]=i("h2",{id:"authors",tabindex:"-1"},[t("Authors "),i("a",{class:"header-anchor",href:"#authors","aria-label":'Permalink to "Authors"'},"​")],-1)),r(s),a[3]||(a[3]=p(`<h2 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-label="Permalink to &quot;Features&quot;">​</a></h2><p>Current functionality includes:</p><ul><li><p>Simulation-based reliability analysis</p><ul><li><p>Monte Carlo simulation</p></li><li><p>Quasi Monte Carlo simulation (Sobol, Halton)</p></li><li><p>(Advanced) Line Sampling</p></li><li><p>Subset Simulation</p></li></ul></li><li><p>Sensitivity analysis</p><ul><li><p>Gradients</p></li><li><p>Sobol indices</p></li></ul></li><li><p>Metamodeling</p><ul><li><p>Polyharmonic splines</p></li><li><p>Response Surface</p></li><li><p>Polynomial Chaos Expansion</p></li></ul></li><li><p>Bayesian Updating</p></li><li><p>Third-party solvers</p><ul><li><p>Connect to any solver by injecting random samples into source files</p></li><li><p>HPC interfacing with slurm</p></li></ul></li><li><p>Stochastic Dynamics</p><ul><li><p>Power Spectral Density Estimation</p></li><li><p>Stochastic Process Generation</p></li></ul></li></ul><hr><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h2><p>To install the latest release through the Julia package manager run:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ]add UncertaintyQuantification</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> UncertaintyQuantification</span></span></code></pre></div><p>or install the latest development version with:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ]add UncertaintyQuantification</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#master</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> UncertaintyQuantification</span></span></code></pre></div><hr><h3 id="Related-packages" tabindex="-1">Related packages <a class="header-anchor" href="#Related-packages" aria-label="Permalink to &quot;Related packages {#Related-packages}&quot;">​</a></h3><ul><li><a href="https://github.com/cossan-working-group/OpenCossan" target="_blank" rel="noreferrer">OpenCossan</a>: Matlab-based toolbox for uncertainty quantification and management</li></ul>`,12))])}const y=n(h,[["render",u]]);export{f as __pageData,y as default};
