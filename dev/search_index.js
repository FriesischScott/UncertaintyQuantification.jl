var documenterSearchIndex = {"docs":
[{"location":"api/parameter/","page":"Parameter","title":"Parameter","text":"CurrentModule = UncertaintyQuantification\nDocTestSetup = quote\n    using UncertaintyQuantification\nend","category":"page"},{"location":"api/parameter/#Parameter","page":"Parameter","title":"Parameter","text":"","category":"section"},{"location":"api/parameter/#Index","page":"Parameter","title":"Index","text":"","category":"section"},{"location":"api/parameter/","page":"Parameter","title":"Parameter","text":"Pages = [\"parameter.md\"]\nModule = [\"UncertaintyQuantification\"]","category":"page"},{"location":"api/parameter/#Type","page":"Parameter","title":"Type","text":"","category":"section"},{"location":"api/parameter/","page":"Parameter","title":"Parameter","text":"Parameter","category":"page"},{"location":"api/parameter/#UncertaintyQuantification.Parameter","page":"Parameter","title":"UncertaintyQuantification.Parameter","text":"Parameter(value::Real, name::Symbol)\n\nDefines a parameter value (scalar), with an input value and a name.\n\nExamples\n\njulia> Parameter(3.14, :π)\nParameter(3.14, :π)\n\n\n\n\n\n","category":"type"},{"location":"manual/sensitivity/#Sensitivity-Analysis","page":"Sensitivity Analysis","title":"Sensitivity Analysis","text":"","category":"section"},{"location":"manual/sensitivity/","page":"Sensitivity Analysis","title":"Sensitivity Analysis","text":"TODO","category":"page"},{"location":"manual/sensitivity/","page":"Sensitivity Analysis","title":"Sensitivity Analysis","text":"Simulation methods\nDifferent indices","category":"page"},{"location":"api/polyharmonicspline/","page":"PolyharmonicSpline","title":"PolyharmonicSpline","text":"CurrentModule = UncertaintyQuantification\nDocTestSetup = quote\n    using UncertaintyQuantification\nend","category":"page"},{"location":"api/polyharmonicspline/#PolyharmonicSpline","page":"PolyharmonicSpline","title":"PolyharmonicSpline","text":"","category":"section"},{"location":"api/polyharmonicspline/#Index","page":"PolyharmonicSpline","title":"Index","text":"","category":"section"},{"location":"api/polyharmonicspline/","page":"PolyharmonicSpline","title":"PolyharmonicSpline","text":"    Pages = [\"polyharmonicspline.md\"]\n    Module = [\"UncertaintyQuantification\"]","category":"page"},{"location":"api/polyharmonicspline/#Type","page":"PolyharmonicSpline","title":"Type","text":"","category":"section"},{"location":"api/polyharmonicspline/","page":"PolyharmonicSpline","title":"PolyharmonicSpline","text":"PolyharmonicSpline","category":"page"},{"location":"api/polyharmonicspline/#UncertaintyQuantification.PolyharmonicSpline","page":"PolyharmonicSpline","title":"UncertaintyQuantification.PolyharmonicSpline","text":"PolyharmonicSpline(data::DataFrame, k::Int64, output::Symbol)\n\ncreates a polyharmonic spline that is trained by given data\n\n#Examples\n\n\njulia> data = DataFrame(x = 1:10, y = [1, -5, -10, -12, -8, -1, 5, 12, 23, 50])\n10×2 DataFrame      \n Row │ x      y     \n     │ Int64  Int64 \n─────┼──────────────\n   1 │     1      1 \n   2 │     2     -5 \n   3 │     3    -10\n   4 │     4    -12\n   5 │     5     -8\n   6 │     6     -1\n   7 │     7      5\n   8 │     8     12\n   9 │     9     23\n  10 │    10     50\n\n  julia> PolyharmonicSpline(data, 2, :y)\nPolyharmonicSpline([1.1473268119780278; -0.44960947031466086; … ; -5.331010776968267; 3.8862763174093313;;],\n     [-112.00528786482354; 6.844431546357826;;], [1.0; 2.0; … ; 9.0; 10.0;;], 2, [:x], :y)\n\n\n\n\n\n","category":"type"},{"location":"api/polyharmonicspline/#Functions","page":"PolyharmonicSpline","title":"Functions","text":"","category":"section"},{"location":"api/polyharmonicspline/","page":"PolyharmonicSpline","title":"PolyharmonicSpline","text":"evaluate!(ps::PolyharmonicSpline, df::DataFrame)","category":"page"},{"location":"api/polyharmonicspline/#UncertaintyQuantification.evaluate!-Tuple{PolyharmonicSpline, DataFrames.DataFrame}","page":"PolyharmonicSpline","title":"UncertaintyQuantification.evaluate!","text":"evaluate!(ps::PolyharmonicSpline, df::DataFrame)\n\nevaluates given data using a previously contructed PolyharmonicSpline\n\n#Examples\n\n\ndata = DataFrame(x = 1:10, y = [1, -5, -10, -12, -8, -1, 5, 12, 23, 50])\n\nps = PolyharmonicSpline(data, 2, :y)\n\ndf = DataFrame( x = [2.5, 7.5, 12, 30])\n\nevaluate!(ps, df)\n\n# output\n\n4-element Vector{Float64}:\n  -7.754272281066534\n   8.290831024829075\n  84.4685159898265\n 260.4367316915062\n\n\n\n\n\n","category":"method"},{"location":"manual/uncertainty/#Uncertainty-Propagation","page":"Uncertainty Propagation","title":"Uncertainty Propagation","text":"","category":"section"},{"location":"manual/uncertainty/","page":"Uncertainty Propagation","title":"Uncertainty Propagation","text":"TODO","category":"page"},{"location":"manual/uncertainty/","page":"Uncertainty Propagation","title":"Uncertainty Propagation","text":"Defining random variables\nDefining correlations\nSimulation methods\nPlotting output","category":"page"},{"location":"api/responsesurface/","page":"ResponseSurface","title":"ResponseSurface","text":"CurrentModule = UncertaintyQuantification\nDocTestSetup = quote\n    using UncertaintyQuantification\nend","category":"page"},{"location":"api/responsesurface/#ResponseSurface","page":"ResponseSurface","title":"ResponseSurface","text":"","category":"section"},{"location":"api/responsesurface/#Index","page":"ResponseSurface","title":"Index","text":"","category":"section"},{"location":"api/responsesurface/","page":"ResponseSurface","title":"ResponseSurface","text":"    Pages = [\"responcesurface.md\"]\n    Module = [\"UncertaintyQuantification\"]","category":"page"},{"location":"api/responsesurface/#Type","page":"ResponseSurface","title":"Type","text":"","category":"section"},{"location":"api/responsesurface/","page":"ResponseSurface","title":"ResponseSurface","text":"ResponseSurface","category":"page"},{"location":"api/responsesurface/#UncertaintyQuantification.ResponseSurface","page":"ResponseSurface","title":"UncertaintyQuantification.ResponseSurface","text":"ResponseSurface(data::DataFrame, dependendVarName::Symbol, deg::Int64, dim::Int64)\n\nCreates a response surface using polynomial least squares regression with given degree.\n\nExamples\n\njulia> data = DataFrame(x = 1:10, y = [1, 4, 10, 15, 24, 37, 50, 62, 80, 101])\n10×2 DataFrame\n Row │ x      y     \n     │ Int64  Int64 \n─────┼──────────────\n   1 │     1      1\n   2 │     2      4\n   3 │     3     10\n   4 │     4     15\n   5 │     5     24\n   6 │     6     37\n   7 │     7     50\n   8 │     8     62\n   9 │     9     80\n  10 │    10    101\n\njulia> rs = ResponseSurface(data, :y, 2)\nResponseSurface([1.018939393939398, -0.23863636363631713, 0.4833333333332348], :y, [:x], 2, Monomial{true}[x₁², x₁, 1])\n\n\n\n\n\n","category":"type"},{"location":"api/responsesurface/#Functions","page":"ResponseSurface","title":"Functions","text":"","category":"section"},{"location":"api/responsesurface/","page":"ResponseSurface","title":"ResponseSurface","text":"evaluate!(rs::ResponseSurface, data::DataFrame)","category":"page"},{"location":"api/responsesurface/#UncertaintyQuantification.evaluate!-Tuple{ResponseSurface, DataFrames.DataFrame}","page":"ResponseSurface","title":"UncertaintyQuantification.evaluate!","text":"evaluate!(rs::ResponseSurface, data::DataFrame)\n\nevaluating data by using a previously trained ResponseSurface.\n\nExamples\n\n\njulia> data = DataFrame(x = 1:10, y = [1, 4, 10, 15, 24, 37, 50, 62, 80, 101])\n10×2 DataFrame\n Row │ x      y     \n     │ Int64  Int64 \n─────┼──────────────\n   1 │     1      1\n   2 │     2      4\n   3 │     3     10\n   4 │     4     15\n   5 │     5     24\n   6 │     6     37\n   7 │     7     50\n   8 │     8     62\n   9 │     9     80\n  10 │    10    101\n\njulia> rs = ResponseSurface(data, :y, 2, 2)\nResponseSurface([0.4833333333331211, -0.23863636363637397, 1.018939393939391], :y, 2, 2)\njulia> evaluate!(rs, [2.5, 11, 15])\n\n\n\n\n\n","category":"method"},{"location":"api/randomvariable/","page":"RandomVariable","title":"RandomVariable","text":"CurrentModule = UncertaintyQuantification\nDocTestSetup = quote\n    using UncertaintyQuantification\nend","category":"page"},{"location":"api/randomvariable/#RandomVariable","page":"RandomVariable","title":"RandomVariable","text":"","category":"section"},{"location":"api/randomvariable/#Index","page":"RandomVariable","title":"Index","text":"","category":"section"},{"location":"api/randomvariable/","page":"RandomVariable","title":"RandomVariable","text":"Pages = [\"randomvariable.md\"]\nModule = [\"UncertaintyQuantification\"]","category":"page"},{"location":"api/randomvariable/#Type","page":"RandomVariable","title":"Type","text":"","category":"section"},{"location":"api/randomvariable/","page":"RandomVariable","title":"RandomVariable","text":"RandomVariable","category":"page"},{"location":"api/randomvariable/#UncertaintyQuantification.RandomVariable","page":"RandomVariable","title":"UncertaintyQuantification.RandomVariable","text":"RandomVariable(dist::Sampleable{Univariate}, name::Symbol)\n\nDefines a random variable, with a univariate distribution from Distributions.jl and a name.\n\nExamples\n\njulia> RandomVariable(Normal(), :x)\nRandomVariable(Normal{Float64}(μ=0.0, σ=1.0), :x)\n\njulia> RandomVariable(Exponential(1), :x)\nRandomVariable(Exponential{Float64}(θ=1.0), :x)\n\n\n\n\n\n","category":"type"},{"location":"api/randomvariable/#Functions","page":"RandomVariable","title":"Functions","text":"","category":"section"},{"location":"api/randomvariable/","page":"RandomVariable","title":"RandomVariable","text":"sample(rv::RandomVariable, n::Integer)","category":"page"},{"location":"api/randomvariable/#UncertaintyQuantification.sample-Tuple{RandomVariable, Integer}","page":"RandomVariable","title":"UncertaintyQuantification.sample","text":"sample(rv::RandomVariable, n::Integer)\n\nGenerates n samples from a random variable. Returns a DataFrame.\n\nExamples\n\nx = RandomVariable(Normal(), :x)\nsample(x, 3)\n\n# output\n\n3×1 DataFrame\n│ Row │ x          │\n│     │ Float64    │\n├─────┼────────────┤\n│ 1   │ 1.00763    │\n│ 2   │ -0.643618  │\n│ 3   │ -0.0826132 │\n\nSee also: RandomVariable\n\n\n\n\n\n","category":"method"},{"location":"manual/reliability/#Reliability-Analysis","page":"Reliability Analysis","title":"Reliability Analysis","text":"","category":"section"},{"location":"manual/reliability/","page":"Reliability Analysis","title":"Reliability Analysis","text":"TODO","category":"page"},{"location":"manual/reliability/","page":"Reliability Analysis","title":"Reliability Analysis","text":"Defining failure regions\nMonte Carlo\nLine sampling","category":"page"},{"location":"#UncertaintyQuantification.jl","page":"Home","title":"UncertaintyQuantification.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"A Julia package for uncertainty quantification. Current functionality includes:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Simulation-based reliability analysis\nMonte Carlo simulation\nQuasi Monte Carlo simulation (Sobol, Halton)\nLine Sampling\nSubset Simulation\nSensitivity analysis\nGradients\nSobol indices\nMetamodeling\nPolyharmonic splines\nThird-party solvers\nConnect to any solver by injecting random samples into source files","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"To install the latest release through the Julia package manager run:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> ]add UncertaintyQuantification\njulia> using UncertaintyQuantification","category":"page"},{"location":"","page":"Home","title":"Home","text":"or install the latest development version with:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> ]add UncertaintyQuantification#master\njulia> using UncertaintyQuantification","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#Authors","page":"Home","title":"Authors","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Jasper Behrensdorf, Institute for Risk and Reliability, Leibniz University Hannover\nAnder Gray, Institute for Risk and Uncertainty, University of Liverpool","category":"page"},{"location":"#Related-packages:","page":"Home","title":"Related packages:","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"OpenCossan: Matlab-based toolbox for uncertainty quantification and management","category":"page"},{"location":"api/inputs/","page":"Inputs","title":"Inputs","text":"CurrentModule = UncertaintyQuantification\nDocTestSetup = quote\n    using UncertaintyQuantification\nend","category":"page"},{"location":"api/inputs/#Inputs","page":"Inputs","title":"Inputs","text":"","category":"section"},{"location":"api/inputs/","page":"Inputs","title":"Inputs","text":"General functions operating on a collection of inputs defined as subtypes of UQInput.","category":"page"},{"location":"api/inputs/#Index","page":"Inputs","title":"Index","text":"","category":"section"},{"location":"api/inputs/","page":"Inputs","title":"Inputs","text":"Pages = [\"inputs.md\"]\nModule = [\"UncertaintyQuantification\"]","category":"page"},{"location":"api/inputs/#Functions","page":"Inputs","title":"Functions","text":"","category":"section"},{"location":"api/inputs/","page":"Inputs","title":"Inputs","text":"sample(inputs::Array{<:UQInput}, n::Integer)","category":"page"},{"location":"api/inputs/#UncertaintyQuantification.sample-Tuple{Array{var\"#s1\", N} where {var\"#s1\"<:UQInput, N}, Integer}","page":"Inputs","title":"UncertaintyQuantification.sample","text":"sample(inputs::Array{<:UQInput}, n::Integer)\n\nGenerates n correlated samples from a collection of inputs. Returns a DataFrame\n\nSee also: RandomVariable, Parameter\n\n\n\n\n\n","category":"method"}]
}
