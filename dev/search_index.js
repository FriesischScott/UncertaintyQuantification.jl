var documenterSearchIndex = {"docs":
[{"location":"api/parameter/","page":"Parameter","title":"Parameter","text":"CurrentModule = UncertaintyQuantification\nDocTestSetup = quote\n    using UncertaintyQuantification\nend","category":"page"},{"location":"api/parameter/#Parameter","page":"Parameter","title":"Parameter","text":"","category":"section"},{"location":"api/parameter/#Index","page":"Parameter","title":"Index","text":"","category":"section"},{"location":"api/parameter/","page":"Parameter","title":"Parameter","text":"Pages = [\"parameter.md\"]\nModule = [\"UncertaintyQuantification\"]","category":"page"},{"location":"api/parameter/#Type","page":"Parameter","title":"Type","text":"","category":"section"},{"location":"api/parameter/","page":"Parameter","title":"Parameter","text":"Parameter","category":"page"},{"location":"api/parameter/#UncertaintyQuantification.Parameter","page":"Parameter","title":"UncertaintyQuantification.Parameter","text":"Parameter(value::Real, name::Symbol)\n\nDefines a parameter value (scalar), with an input value and a name.\n\nExamples\n\njulia> Parameter(3.14, :π)\nParameter(3.14, :π)\n\n\n\n\n\n","category":"type"},{"location":"manual/sensitivity/#Sensitivity-Analysis","page":"Sensitivity Analysis","title":"Sensitivity Analysis","text":"","category":"section"},{"location":"manual/sensitivity/","page":"Sensitivity Analysis","title":"Sensitivity Analysis","text":"TODO","category":"page"},{"location":"manual/sensitivity/","page":"Sensitivity Analysis","title":"Sensitivity Analysis","text":"Simulation methods\nDifferent indices","category":"page"},{"location":"manual/uncertainty/#Uncertainty-Propagation","page":"Uncertainty Propagation","title":"Uncertainty Propagation","text":"","category":"section"},{"location":"manual/uncertainty/","page":"Uncertainty Propagation","title":"Uncertainty Propagation","text":"TODO","category":"page"},{"location":"manual/uncertainty/","page":"Uncertainty Propagation","title":"Uncertainty Propagation","text":"Defining random variables\nDefining correlations\nSimulation methods\nPlotting output","category":"page"},{"location":"api/randomvariable/","page":"RandomVariable","title":"RandomVariable","text":"CurrentModule = UncertaintyQuantification\nDocTestSetup = quote\n    using UncertaintyQuantification\nend","category":"page"},{"location":"api/randomvariable/#RandomVariable","page":"RandomVariable","title":"RandomVariable","text":"","category":"section"},{"location":"api/randomvariable/#Index","page":"RandomVariable","title":"Index","text":"","category":"section"},{"location":"api/randomvariable/","page":"RandomVariable","title":"RandomVariable","text":"Pages = [\"randomvariable.md\"]\nModule = [\"UncertaintyQuantification\"]","category":"page"},{"location":"api/randomvariable/#Type","page":"RandomVariable","title":"Type","text":"","category":"section"},{"location":"api/randomvariable/","page":"RandomVariable","title":"RandomVariable","text":"RandomVariable","category":"page"},{"location":"api/randomvariable/#UncertaintyQuantification.RandomVariable","page":"RandomVariable","title":"UncertaintyQuantification.RandomVariable","text":"RandomVariable(dist::Sampleable{Univariate}, name::Symbol)\n\nDefines a random variable, with a univariate distribution from Distributions.jl and a name.\n\nExamples\n\njulia> RandomVariable(Normal(), :x)\nRandomVariable(Normal{Float64}(μ=0.0, σ=1.0), :x)\n\njulia> RandomVariable(Exponential(1), :x)\nRandomVariable(Exponential{Float64}(θ=1.0), :x)\n\n\n\n\n\n","category":"type"},{"location":"api/randomvariable/#Functions","page":"RandomVariable","title":"Functions","text":"","category":"section"},{"location":"api/randomvariable/","page":"RandomVariable","title":"RandomVariable","text":"sample(rv::RandomVariable, n::Integer)","category":"page"},{"location":"api/randomvariable/#UncertaintyQuantification.sample-Tuple{RandomVariable,Integer}","page":"RandomVariable","title":"UncertaintyQuantification.sample","text":"sample(rv::RandomVariable, n::Integer)\n\nGenerates n samples from a random variable. Returns a DataFrame.\n\nExamples\n\nx = RandomVariable(Normal(), :x)\nsample(x, 3)\n\n# output\n\n3×1 DataFrame\n│ Row │ x          │\n│     │ Float64    │\n├─────┼────────────┤\n│ 1   │ 1.00763    │\n│ 2   │ -0.643618  │\n│ 3   │ -0.0826132 │\n\nSee also: RandomVariable\n\n\n\n\n\n","category":"method"},{"location":"manual/reliability/#Reliability-Analysis","page":"Reliability Analysis","title":"Reliability Analysis","text":"","category":"section"},{"location":"manual/reliability/","page":"Reliability Analysis","title":"Reliability Analysis","text":"TODO","category":"page"},{"location":"manual/reliability/","page":"Reliability Analysis","title":"Reliability Analysis","text":"Defining failure regions\nMonte Carlo\nLine sampling","category":"page"},{"location":"#UncertaintyQuantification.jl","page":"Home","title":"UncertaintyQuantification.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"A Julia package for uncertainty quantification. Current functionality includes:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Simulation-based reliability analysis\nMonte Carlo simulation\nQuasi Monte Carlo simulation (Sobol, Halton)\nLine Sampling\nSubset Simulation\nSensitivity analysis\nGradients\nSobol indices\nMetamodeling\nPolyharmonic splines\nThird-party solvers\nConnect to any solver by injecting random samples into source files","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"To install the latest release through the Julia package manager run:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> ]add UncertaintyQuantification\njulia> using UncertaintyQuantification","category":"page"},{"location":"","page":"Home","title":"Home","text":"or install the latest development version with:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> ]add UncertaintyQuantification#master\njulia> using UncertaintyQuantification","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#Authors","page":"Home","title":"Authors","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Jasper Behrensdorf, Institute for Risk and Reliability, Leibniz University Hannover\nAnder Gray, Institute for Risk and Uncertainty, University of Liverpool","category":"page"},{"location":"#Related-packages:","page":"Home","title":"Related packages:","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"OpenCossan: Matlab-based toolbox for uncertainty quantification and management","category":"page"},{"location":"api/inputs/","page":"Inputs","title":"Inputs","text":"CurrentModule = UncertaintyQuantification\nDocTestSetup = quote\n    using UncertaintyQuantification\nend","category":"page"},{"location":"api/inputs/#Inputs","page":"Inputs","title":"Inputs","text":"","category":"section"},{"location":"api/inputs/","page":"Inputs","title":"Inputs","text":"General functions operating on a collection of inputs defined as subtypes of UQInput.","category":"page"},{"location":"api/inputs/#Index","page":"Inputs","title":"Index","text":"","category":"section"},{"location":"api/inputs/","page":"Inputs","title":"Inputs","text":"Pages = [\"inputs.md\"]\nModule = [\"UncertaintyQuantification\"]","category":"page"},{"location":"api/inputs/#Functions","page":"Inputs","title":"Functions","text":"","category":"section"},{"location":"api/inputs/","page":"Inputs","title":"Inputs","text":"sample(inputs::Array{<:UQInput}, n::Integer)","category":"page"},{"location":"api/inputs/#UncertaintyQuantification.sample-Tuple{Array{var\"#s3\",N} where N where var\"#s3\"<:UQInput,Integer}","page":"Inputs","title":"UncertaintyQuantification.sample","text":"sample(inputs::Array{<:UQInput}, n::Integer)\n\nGenerates n correlated samples from a collection of inputs. Returns a DataFrame\n\nSee also: RandomVariable, Parameter\n\n\n\n\n\n","category":"method"}]
}
