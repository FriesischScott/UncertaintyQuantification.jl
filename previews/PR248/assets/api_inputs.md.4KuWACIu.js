import{_ as p,C as h,c as r,o as k,ai as t,j as s,G as n,a as e,w as l}from"./chunks/framework.-VC4WfIy.js";const j=JSON.parse('{"title":"Inputs","description":"","frontmatter":{},"headers":[],"relativePath":"api/inputs.md","filePath":"api/inputs.md","lastUpdated":null}'),o={name:"api/inputs.md"},d={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""};function b(F,i,C,m,f,v){const a=h("Badge");return k(),r("div",null,[i[24]||(i[24]=t('<h1 id="inputs" tabindex="-1">Inputs <a class="header-anchor" href="#inputs" aria-label="Permalink to &quot;Inputs&quot;">​</a></h1><h2 id="index" tabindex="-1">Index <a class="header-anchor" href="#index" aria-label="Permalink to &quot;Index&quot;">​</a></h2><ul><li><a href="#UncertaintyQuantification.EmpiricalDistribution"><code>UncertaintyQuantification.EmpiricalDistribution</code></a></li><li><a href="#UncertaintyQuantification.Interval"><code>UncertaintyQuantification.Interval</code></a></li><li><a href="#UncertaintyQuantification.IntervalVariable"><code>UncertaintyQuantification.IntervalVariable</code></a></li><li><a href="#UncertaintyQuantification.Parameter"><code>UncertaintyQuantification.Parameter</code></a></li><li><a href="#UncertaintyQuantification.ProbabilityBox"><code>UncertaintyQuantification.ProbabilityBox</code></a></li><li><a href="#UncertaintyQuantification.RandomVariable"><code>UncertaintyQuantification.RandomVariable</code></a></li><li><a href="#UncertaintyQuantification.sample"><code>UncertaintyQuantification.sample</code></a></li><li><a href="#UncertaintyQuantification.sample"><code>UncertaintyQuantification.sample</code></a></li></ul><h2 id="types" tabindex="-1">Types <a class="header-anchor" href="#types" aria-label="Permalink to &quot;Types&quot;">​</a></h2>',4)),s("details",d,[s("summary",null,[i[0]||(i[0]=s("a",{id:"UncertaintyQuantification.Parameter",href:"#UncertaintyQuantification.Parameter"},[s("span",{class:"jlbinding"},"UncertaintyQuantification.Parameter")],-1)),i[1]||(i[1]=e()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),i[3]||(i[3]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Parameter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Symbol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Defines a parameter value (scalar), with an input value and a name.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Parameter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3.14</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:π</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Parameter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3.14</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:π</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>`,4)),n(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>i[2]||(i[2]=[s("a",{href:"https://github.com/FriesischScott/UncertaintyQuantification.jl/blob/787e4e77a59c3e799951c68eeb9e59a6fc31c78f/src/inputs/parameter.jl#L1-L11",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[2]})]),s("details",c,[s("summary",null,[i[4]||(i[4]=s("a",{id:"UncertaintyQuantification.Interval",href:"#UncertaintyQuantification.Interval"},[s("span",{class:"jlbinding"},"UncertaintyQuantification.Interval")],-1)),i[5]||(i[5]=e()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),i[7]||(i[7]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Interval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(lb</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Represents a closed numeric interval with a lower bound <code>lb</code> and an upper bound <code>ub</code>.</p><p><code>Interval</code> is a data type primarily used for constructing probability boxes (p-boxes) and other uncertainty representations. It is <strong>not</strong> intended for direct use in simulations for that, see <a href="/UncertaintyQuantification.jl/previews/PR248/api/inputs#UncertaintyQuantification.IntervalVariable"><code>IntervalVariable</code></a>.</p><p><strong>Fields</strong></p><ul><li><p><code>lb::Real</code>: Lower bound of the interval.</p></li><li><p><code>ub::Real</code>: Upper bound of the interval.</p></li></ul><p><strong>Examples</strong></p><div class="language-jldoctest vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jldoctest</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;Badge type=&quot;info&quot; class=&quot;source-link&quot; text=&quot;source&quot;&gt;&lt;a href=&quot;https://github.com/FriesischScott/UncertaintyQuantification.jl/blob/787e4e77a59c3e799951c68eeb9e59a6fc31c78f/src/inputs/imprecise/interval.jl#L1-L17&quot; target=&quot;_blank&quot; rel=&quot;noreferrer&quot;&gt;source&lt;/a&gt;&lt;/Badge&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;/details&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;details class=&#39;jldocstring custom-block&#39; open&gt;</span></span>
<span class="line"><span>&lt;summary&gt;&lt;a id=&#39;UncertaintyQuantification.ProbabilityBox&#39; href=&#39;#UncertaintyQuantification.ProbabilityBox&#39;&gt;&lt;span class=&quot;jlbinding&quot;&gt;UncertaintyQuantification.ProbabilityBox&lt;/span&gt;&lt;/a&gt; &lt;Badge type=&quot;info&quot; class=&quot;jlObjectType jlType&quot; text=&quot;Type&quot; /&gt;&lt;/summary&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>\`\`\`julia</span></span>
<span class="line"><span>ProbabilityBox{T}(parameters::Dict{Symbol, Union{Real, Interval}}, lb::Real, ub::Real)</span></span>
<span class="line"><span>ProbabilityBox{T}(parameters::Dict{Symbol, Union{Real, Interval}})</span></span>
<span class="line"><span>ProbabilityBox{T}(parameter::Interval)</span></span></code></pre></div><p>Represents a (optionally truncated) probability box (p-box) for a univariate distribution <code>T</code>, where parameters may be specified as precise values (<code>Real</code>) or intervals (<a href="/UncertaintyQuantification.jl/previews/PR248/api/inputs#UncertaintyQuantification.Interval"><code>Interval</code></a>). The support of the distribution is bounded by <code>lb</code> (lower bound) and <code>ub</code> (upper bound).</p><p>To use the <code>ProbabilityBox</code> in an analysis it has to be wrapped in a <a href="/UncertaintyQuantification.jl/previews/PR248/api/inputs#UncertaintyQuantification.RandomVariable"><code>RandomVariable</code></a>.</p><p><strong>Fields</strong></p><ul><li><p><code>parameters::Dict{Symbol, Union{Real, Interval}}</code>: Dictionary mapping parameter names (as symbols) to their values or intervals.</p></li><li><p><code>lb::Real</code>: Lower bound of the distribution&#39;s support.</p></li><li><p><code>ub::Real</code>: Upper bound of the distribution&#39;s support.</p></li></ul><p><strong>Constructors</strong></p><ul><li><p><code>ProbabilityBox{T}(parameters::Dict{Symbol, Union{Real, Interval}}, lb::Real, ub::Real)</code>: Specify all parameters and support bounds explicitly.</p></li><li><p><code>ProbabilityBox{T}(parameters::Dict{Symbol, Union{Real, Interval}})</code>: Support bounds are inferred from the distribution type <code>T</code>.</p></li><li><p><code>ProbabilityBox{T}(parameter::Interval)</code>: For univariate distributions with a single parameter, construct from a single interval.</p></li></ul><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ProbabilityBox{Normal}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Dict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:μ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Interval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:σ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Interval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Inf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ProbabilityBox{Normal}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Dict{Symbol, Union{Real, Interval}}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:μ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:σ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Inf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ProbabilityBox{Normal}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Dict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:μ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Interval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:σ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Interval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ProbabilityBox{Normal}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Dict{Symbol, Union{Real, Interval}}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:μ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:σ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]), </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Inf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Inf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ProbabilityBox{Exponential}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Interval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ProbabilityBox{Exponential}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Dict{Symbol, Union{Real, Interval}}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:θ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Inf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>`,15)),n(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>i[6]||(i[6]=[s("a",{href:"https://github.com/FriesischScott/UncertaintyQuantification.jl/blob/787e4e77a59c3e799951c68eeb9e59a6fc31c78f/src/inputs/imprecise/p-box.jl#L1-L32",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[6]})]),s("details",g,[s("summary",null,[i[8]||(i[8]=s("a",{id:"UncertaintyQuantification.RandomVariable",href:"#UncertaintyQuantification.RandomVariable"},[s("span",{class:"jlbinding"},"UncertaintyQuantification.RandomVariable")],-1)),i[9]||(i[9]=e()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),i[11]||(i[11]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RandomVariable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(dist</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">UnivariateDistribution</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Symbol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Defines a random variable, with a univariate distribution from Distributions.jl and a name.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RandomVariable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Normal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RandomVariable{Normal{Float64}}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Normal{Float64}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(μ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, σ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RandomVariable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Exponential</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RandomVariable{Exponential{Float64}}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Exponential{Float64}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(θ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>`,4)),n(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>i[10]||(i[10]=[s("a",{href:"https://github.com/FriesischScott/UncertaintyQuantification.jl/blob/787e4e77a59c3e799951c68eeb9e59a6fc31c78f/src/inputs/randomvariables/randomvariable.jl#L1-L15",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[10]})]),s("details",y,[s("summary",null,[i[12]||(i[12]=s("a",{id:"UncertaintyQuantification.IntervalVariable",href:"#UncertaintyQuantification.IntervalVariable"},[s("span",{class:"jlbinding"},"UncertaintyQuantification.IntervalVariable")],-1)),i[13]||(i[13]=e()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),i[15]||(i[15]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IntervalVariable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(lb</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Symbol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Defines an interval variable with a lower bound <code>lb</code>, upper bound <code>ub</code>, and an identifying <code>name</code>.</p><p><code>IntervalVariable</code> can be passed directly to analyses and simulations. For other uses, such as building probability boxes (p-boxes) from interval parameters, use <a href="/UncertaintyQuantification.jl/previews/PR248/api/inputs#UncertaintyQuantification.Interval"><code>Interval</code></a> instead.</p><p><strong>Fields</strong></p><ul><li><p><code>lb::Real</code>: Lower bound of the interval.</p></li><li><p><code>ub::Real</code>: Upper bound of the interval.</p></li><li><p><code>name::Symbol</code>: Name or identifier for the variable.</p></li></ul><p><strong>Examples</strong></p><div class="language-jldoctest vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jldoctest</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;Badge type=&quot;info&quot; class=&quot;source-link&quot; text=&quot;source&quot;&gt;&lt;a href=&quot;https://github.com/FriesischScott/UncertaintyQuantification.jl/blob/787e4e77a59c3e799951c68eeb9e59a6fc31c78f/src/inputs/imprecise/interval.jl#L46-L64&quot; target=&quot;_blank&quot; rel=&quot;noreferrer&quot;&gt;source&lt;/a&gt;&lt;/Badge&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;/details&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;details class=&#39;jldocstring custom-block&#39; open&gt;</span></span>
<span class="line"><span>&lt;summary&gt;&lt;a id=&#39;UncertaintyQuantification.EmpiricalDistribution&#39; href=&#39;#UncertaintyQuantification.EmpiricalDistribution&#39;&gt;&lt;span class=&quot;jlbinding&quot;&gt;UncertaintyQuantification.EmpiricalDistribution&lt;/span&gt;&lt;/a&gt; &lt;Badge type=&quot;info&quot; class=&quot;jlObjectType jlType&quot; text=&quot;Type&quot; /&gt;&lt;/summary&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>\`\`\`julia</span></span>
<span class="line"><span>EmpiricalDistribution(x::Vector{&lt;:Real}, n::Integer=10000)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Creates an empirical distribution from the data given in \`x\` using kernel density estimation.</span></span>
<span class="line"><span>The kernel used is Gaussian and the bandwidth is obtained through the Sheather-Jones method.</span></span>
<span class="line"><span>The support is inferred from the kde using numerical root finding.</span></span>
<span class="line"><span>The \`cdf\` and \`quantile\` functions are linearly interpolated using \`n\` data points.</span></span></code></pre></div>`,7)),n(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>i[14]||(i[14]=[s("a",{href:"https://github.com/FriesischScott/UncertaintyQuantification.jl/blob/787e4e77a59c3e799951c68eeb9e59a6fc31c78f/src/inputs/empiricaldistribution.jl#L1-L8",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[14]})]),i[25]||(i[25]=s("h2",{id:"functions",tabindex:"-1"},[e("Functions "),s("a",{class:"header-anchor",href:"#functions","aria-label":'Permalink to "Functions"'},"​")],-1)),s("details",E,[s("summary",null,[i[16]||(i[16]=s("a",{id:"UncertaintyQuantification.sample",href:"#UncertaintyQuantification.sample"},[s("span",{class:"jlbinding"},"UncertaintyQuantification.sample")],-1)),i[17]||(i[17]=e()),n(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),i[19]||(i[19]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sample</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rv</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RandomVariable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Generates n samples from a random variable. Returns a DataFrame.</p><p><strong>Examples</strong></p><p>See also: <a href="/UncertaintyQuantification.jl/previews/PR248/api/inputs#UncertaintyQuantification.RandomVariable"><code>RandomVariable</code></a></p>',4)),n(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>i[18]||(i[18]=[s("a",{href:"https://github.com/FriesischScott/UncertaintyQuantification.jl/blob/787e4e77a59c3e799951c68eeb9e59a6fc31c78f/src/inputs/randomvariables/randomvariable.jl#L21-L29",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[18]})]),s("details",u,[s("summary",null,[i[20]||(i[20]=s("a",{id:"UncertaintyQuantification.sample-2",href:"#UncertaintyQuantification.sample-2"},[s("span",{class:"jlbinding"},"UncertaintyQuantification.sample")],-1)),i[21]||(i[21]=e()),n(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),i[23]||(i[23]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sample</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(inputs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vector{&lt;:UQInput}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Generates n correlated samples from a collection of inputs. Returns a DataFrame</p><p>See also: <a href="/UncertaintyQuantification.jl/previews/PR248/api/inputs#UncertaintyQuantification.RandomVariable"><code>RandomVariable</code></a>, <a href="/UncertaintyQuantification.jl/previews/PR248/api/inputs#UncertaintyQuantification.Parameter"><code>Parameter</code></a></p>',3)),n(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>i[22]||(i[22]=[s("a",{href:"https://github.com/FriesischScott/UncertaintyQuantification.jl/blob/787e4e77a59c3e799951c68eeb9e59a6fc31c78f/src/inputs/inputs.jl#L1-L7",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[22]})])])}const x=p(o,[["render",b]]);export{j as __pageData,x as default};
