import{_ as r,C as l,c as d,o as c,ai as s,j as t,G as n,a as e,w as o}from"./chunks/framework._18x9DZc.js";const E=JSON.parse('{"title":"Statistics","description":"","frontmatter":{},"headers":[],"relativePath":"api/statistics.md","filePath":"api/statistics.md","lastUpdated":null}'),p={name:"api/statistics.md"},h={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""};function g(k,i,b,f,y,_){const a=l("Badge");return c(),d("div",null,[i[8]||(i[8]=s('<h1 id="Statistics" tabindex="-1">Statistics <a class="header-anchor" href="#Statistics" aria-label="Permalink to &quot;Statistics {#Statistics}&quot;">​</a></h1><h2 id="Index" tabindex="-1">Index <a class="header-anchor" href="#Index" aria-label="Permalink to &quot;Index {#Index}&quot;">​</a></h2><ul><li><a href="#UncertaintyQuantification.BinnedData"><code>UncertaintyQuantification.BinnedData</code></a></li><li><a href="#UncertaintyQuantification.linear_binning"><code>UncertaintyQuantification.linear_binning</code></a></li></ul><h2 id="Types" tabindex="-1">Types <a class="header-anchor" href="#Types" aria-label="Permalink to &quot;Types {#Types}&quot;">​</a></h2>',4)),t("details",h,[t("summary",null,[i[0]||(i[0]=t("a",{id:"UncertaintyQuantification.BinnedData",href:"#UncertaintyQuantification.BinnedData"},[t("span",{class:"jlbinding"},"UncertaintyQuantification.BinnedData")],-1)),i[1]||(i[1]=e()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),i[3]||(i[3]=s('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">BinnedData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(grid</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector{&lt;:Real}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, weights</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector{&lt;:Real}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Container for one dimensional binned data constructed from grid points and associated weights.</p>',2)),n(a,{type:"info",class:"source-link",text:"source"},{default:o(()=>[...i[2]||(i[2]=[t("a",{href:"https://github.com/FriesischScott/UncertaintyQuantification.jl/blob/d4c05fea33eb127f958031dc98e4451d40205705/src/util/binning.jl#L1-L5",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i[9]||(i[9]=t("h2",{id:"Functions",tabindex:"-1"},[e("Functions "),t("a",{class:"header-anchor",href:"#Functions","aria-label":'Permalink to "Functions {#Functions}"'},"​")],-1)),t("details",u,[t("summary",null,[i[4]||(i[4]=t("a",{id:"UncertaintyQuantification.linear_binning",href:"#UncertaintyQuantification.linear_binning"},[t("span",{class:"jlbinding"},"UncertaintyQuantification.linear_binning")],-1)),i[5]||(i[5]=e()),n(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),i[7]||(i[7]=s('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">linear_binning</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, nbins</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Bin the data in <code>x</code> into <code>nbins</code> regular bins between <code>minimum(x)</code> and <code>maximum(x)</code> using linear binning.</p><p>In difference to regular binning, if a data point lies between two grid points, linear binning assigns weight to both points. The closer the grid point is to the data the more weight it is assigned. Note, that points with a weight of zero are discarded.</p><p>Returns a <code>BinnedData</code> object.</p><p><strong>References</strong></p><p>[<a href="/UncertaintyQuantification.jl/previews/PR269/references#jonesErrorsInvolvedComputing1983">11</a>]</p>',6)),n(a,{type:"info",class:"source-link",text:"source"},{default:o(()=>[...i[6]||(i[6]=[t("a",{href:"https://github.com/FriesischScott/UncertaintyQuantification.jl/blob/d4c05fea33eb127f958031dc98e4451d40205705/src/util/binning.jl#L11-L24",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})])])}const T=r(p,[["render",g]]);export{E as __pageData,T as default};
