import{_ as h,C as p,c as k,o as r,ai as n,j as s,G as t,a as e,w as l}from"./chunks/framework.DmvChsEd.js";const A=JSON.parse('{"title":"Inputs","description":"","frontmatter":{},"headers":[],"relativePath":"api/inputs.md","filePath":"api/inputs.md","lastUpdated":null}'),d={name:"api/inputs.md"},o={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},F={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},C={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""};function f(_,i,B,v,j,x){const a=p("Badge");return r(),k("div",null,[i[40]||(i[40]=n('<h1 id="inputs" tabindex="-1">Inputs <a class="header-anchor" href="#inputs" aria-label="Permalink to &quot;Inputs&quot;">​</a></h1><h2 id="index" tabindex="-1">Index <a class="header-anchor" href="#index" aria-label="Permalink to &quot;Index&quot;">​</a></h2><ul><li><a href="#UncertaintyQuantification.EmpiricalDistribution"><code>UncertaintyQuantification.EmpiricalDistribution</code></a></li><li><a href="#UncertaintyQuantification.GaussianMixtureModel"><code>UncertaintyQuantification.GaussianMixtureModel</code></a></li><li><a href="#UncertaintyQuantification.Interval"><code>UncertaintyQuantification.Interval</code></a></li><li><a href="#UncertaintyQuantification.Parameter"><code>UncertaintyQuantification.Parameter</code></a></li><li><a href="#UncertaintyQuantification.ProbabilityBox"><code>UncertaintyQuantification.ProbabilityBox</code></a></li><li><a href="#UncertaintyQuantification.RandomVariable"><code>UncertaintyQuantification.RandomVariable</code></a></li><li><a href="#UncertaintyQuantification.fit_gaussian_mixture-Tuple{Integer, Matrix}"><code>UncertaintyQuantification.fit_gaussian_mixture</code></a></li><li><a href="#UncertaintyQuantification.sample"><code>UncertaintyQuantification.sample</code></a></li><li><a href="#UncertaintyQuantification.sample"><code>UncertaintyQuantification.sample</code></a></li><li><a href="#UncertaintyQuantification.sample"><code>UncertaintyQuantification.sample</code></a></li></ul><h2 id="types" tabindex="-1">Types <a class="header-anchor" href="#types" aria-label="Permalink to &quot;Types&quot;">​</a></h2>',4)),s("details",o,[s("summary",null,[i[0]||(i[0]=s("a",{id:"UncertaintyQuantification.Parameter",href:"#UncertaintyQuantification.Parameter"},[s("span",{class:"jlbinding"},"UncertaintyQuantification.Parameter")],-1)),i[1]||(i[1]=e()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),i[3]||(i[3]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Parameter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Symbol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Defines a parameter value (scalar), with an input value and a name.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Parameter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3.14</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:π</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Parameter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3.14</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:π</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>`,4)),t(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>i[2]||(i[2]=[s("a",{href:"https://github.com/FriesischScott/UncertaintyQuantification.jl/blob/c78e3bf3fcc1beda726b3bcd3d510694467f9e48/src/inputs/parameter.jl#L1-L11",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[2]})]),s("details",E,[s("summary",null,[i[4]||(i[4]=s("a",{id:"UncertaintyQuantification.RandomVariable",href:"#UncertaintyQuantification.RandomVariable"},[s("span",{class:"jlbinding"},"UncertaintyQuantification.RandomVariable")],-1)),i[5]||(i[5]=e()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),i[7]||(i[7]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RandomVariable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(dist</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">UnivariateDistribution</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Symbol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Defines a random variable, with a univariate distribution from Distributions.jl and a name.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RandomVariable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Normal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RandomVariable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Normal{Float64}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(μ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, σ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RandomVariable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Exponential</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RandomVariable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Exponential{Float64}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(θ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>`,4)),t(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>i[6]||(i[6]=[s("a",{href:"https://github.com/FriesischScott/UncertaintyQuantification.jl/blob/c78e3bf3fcc1beda726b3bcd3d510694467f9e48/src/inputs/randomvariables/randomvariable.jl#L1-L15",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[6]})]),s("details",g,[s("summary",null,[i[8]||(i[8]=s("a",{id:"UncertaintyQuantification.EmpiricalDistribution",href:"#UncertaintyQuantification.EmpiricalDistribution"},[s("span",{class:"jlbinding"},"UncertaintyQuantification.EmpiricalDistribution")],-1)),i[9]||(i[9]=e()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),i[11]||(i[11]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EmpiricalDistribution</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vector{&lt;:Real}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Creates an empirical distribution from the data given </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> `x`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> kernel density estimation.</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">The kernel used is Gaussian and the bandwidth is obtained through the Sheather</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Jones method.</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">The support is inferred from the kde </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> numerical root finding.</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">The </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`cdf`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> and </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`quantile`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> functions are linearly interpolated </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> `n`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> data points.</span></span></code></pre></div>',1)),t(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>i[10]||(i[10]=[s("a",{href:"https://github.com/FriesischScott/UncertaintyQuantification.jl/blob/c78e3bf3fcc1beda726b3bcd3d510694467f9e48/src/inputs/empiricaldistribution.jl#L1-L8",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[10]})]),s("details",c,[s("summary",null,[i[12]||(i[12]=s("a",{id:"UncertaintyQuantification.Interval",href:"#UncertaintyQuantification.Interval"},[s("span",{class:"jlbinding"},"UncertaintyQuantification.Interval")],-1)),i[13]||(i[13]=e()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),i[15]||(i[15]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Interval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(lb</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, up</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Symbol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Defines an Interval, with lower a bound, an upper bound and a name.</p><p><strong>Examples</strong></p><p><code>jldoctest julia&gt; Interval(0.10, 0.14, :b) Interval(0.1, 0.14, :b)</code></p>',4)),t(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>i[14]||(i[14]=[s("a",{href:"https://github.com/FriesischScott/UncertaintyQuantification.jl/blob/c78e3bf3fcc1beda726b3bcd3d510694467f9e48/src/inputs/imprecise/interval.jl#L1-L11",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[14]})]),s("details",y,[s("summary",null,[i[16]||(i[16]=s("a",{id:"UncertaintyQuantification.ProbabilityBox",href:"#UncertaintyQuantification.ProbabilityBox"},[s("span",{class:"jlbinding"},"UncertaintyQuantification.ProbabilityBox")],-1)),i[17]||(i[17]=e()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),i[19]||(i[19]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ProbabilityBox{T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector{Interval}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Symbol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Defines an ProbabilityBox from a <code>Vector</code> of <code>Interval</code>, name <code>UnivariateDistribution</code> <code>T</code>. The number and order of parameters must match the parameters of the associated distribution from Distributions.jl.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  ProbabilityBox{Uniform}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Interval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.75</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.83</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Interval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.77</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.85</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:b</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)], </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:l</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ProbabilityBox{Uniform}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Interval[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Interval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.75</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.83</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Interval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.77</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.85</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:b</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)], </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:l</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.75</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.85</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  ProbabilityBox{Normal}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Interval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:μ</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Interval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:σ</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)], </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ProbabilityBox{Normal}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Interval[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Interval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:μ</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Interval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:σ</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)], </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Inf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Inf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>`,5)),t(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>i[18]||(i[18]=[s("a",{href:"https://github.com/FriesischScott/UncertaintyQuantification.jl/blob/c78e3bf3fcc1beda726b3bcd3d510694467f9e48/src/inputs/imprecise/p-box.jl#L1-L17",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[18]})]),s("details",u,[s("summary",null,[i[20]||(i[20]=s("a",{id:"UncertaintyQuantification.GaussianMixtureModel",href:"#UncertaintyQuantification.GaussianMixtureModel"},[s("span",{class:"jlbinding"},"UncertaintyQuantification.GaussianMixtureModel")],-1)),i[21]||(i[21]=e()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),i[23]||(i[23]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">GaussianMixtureModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(names</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vector{Symbol}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, number_components</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Creates a Gaussian Mixture Model (GMM) with the specified number of components and dimensions.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">The GMM is initialized with multivariate normal distributions </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> each component, with means set to zero and identity covariance matrices.</span></span></code></pre></div>`,1)),t(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>i[22]||(i[22]=[s("a",{href:"https://github.com/FriesischScott/UncertaintyQuantification.jl/blob/c78e3bf3fcc1beda726b3bcd3d510694467f9e48/src/inputs/gaussianmixtures.jl#L1-L6",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[22]})]),i[41]||(i[41]=s("h2",{id:"functions",tabindex:"-1"},[e("Functions "),s("a",{class:"header-anchor",href:"#functions","aria-label":'Permalink to "Functions"'},"​")],-1)),s("details",F,[s("summary",null,[i[24]||(i[24]=s("a",{id:"UncertaintyQuantification.sample",href:"#UncertaintyQuantification.sample"},[s("span",{class:"jlbinding"},"UncertaintyQuantification.sample")],-1)),i[25]||(i[25]=e()),t(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),i[27]||(i[27]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sample</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rv</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RandomVariable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Generates n samples from a random variable. Returns a DataFrame.</p><p><strong>Examples</strong></p><p>See also: <a href="/UncertaintyQuantification.jl/previews/PR257/api/inputs#UncertaintyQuantification.RandomVariable"><code>RandomVariable</code></a></p>',4)),t(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>i[26]||(i[26]=[s("a",{href:"https://github.com/FriesischScott/UncertaintyQuantification.jl/blob/c78e3bf3fcc1beda726b3bcd3d510694467f9e48/src/inputs/randomvariables/randomvariable.jl#L21-L29",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[26]})]),s("details",b,[s("summary",null,[i[28]||(i[28]=s("a",{id:"UncertaintyQuantification.sample-2",href:"#UncertaintyQuantification.sample-2"},[s("span",{class:"jlbinding"},"UncertaintyQuantification.sample")],-1)),i[29]||(i[29]=e()),t(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),i[31]||(i[31]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sample</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(inputs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vector{&lt;:UQInput}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Generates n correlated samples from a collection of inputs. Returns a DataFrame</p><p>See also: <a href="/UncertaintyQuantification.jl/previews/PR257/api/inputs#UncertaintyQuantification.RandomVariable"><code>RandomVariable</code></a>, <a href="/UncertaintyQuantification.jl/previews/PR257/api/inputs#UncertaintyQuantification.Parameter"><code>Parameter</code></a></p>',3)),t(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>i[30]||(i[30]=[s("a",{href:"https://github.com/FriesischScott/UncertaintyQuantification.jl/blob/c78e3bf3fcc1beda726b3bcd3d510694467f9e48/src/inputs/inputs.jl#L1-L7",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[30]})]),s("details",C,[s("summary",null,[i[32]||(i[32]=s("a",{id:"UncertaintyQuantification.sample-3",href:"#UncertaintyQuantification.sample-3"},[s("span",{class:"jlbinding"},"UncertaintyQuantification.sample")],-1)),i[33]||(i[33]=e()),t(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),i[35]||(i[35]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sample</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(gmm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">GaussianMixtureModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Generates <code>n</code> samples from the Gaussian Mixture Model. Returns a DataFrame.</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>i[34]||(i[34]=[s("a",{href:"https://github.com/FriesischScott/UncertaintyQuantification.jl/blob/c78e3bf3fcc1beda726b3bcd3d510694467f9e48/src/inputs/gaussianmixtures.jl#L32-L36",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[34]})]),s("details",m,[s("summary",null,[i[36]||(i[36]=s("a",{id:"UncertaintyQuantification.fit_gaussian_mixture-Tuple{Integer, Matrix}",href:"#UncertaintyQuantification.fit_gaussian_mixture-Tuple{Integer, Matrix}"},[s("span",{class:"jlbinding"},"UncertaintyQuantification.fit_gaussian_mixture")],-1)),i[37]||(i[37]=e()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),i[39]||(i[39]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">fit_gaussian_mixture</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(number_components</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, number_samples</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Matrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; maximum_iterations</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, tolerance</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Number</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1e-4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Fits a Gaussian Mixture Model (GMM) to the given data using the Expectation-Maximization (EM) algorithm.</p><p><strong>Arguments</strong></p><ul><li><p><code>number_components::Integer</code>: Number of mixture components (clusters).</p></li><li><p><code>number_samples::Integer</code>: Number of data points (rows in <code>X</code>).</p></li><li><p><code>data::Matrix</code>: Data matrix of size <code>N × D</code>, where each row is a data point and each column is a feature.</p></li><li><p><code>maximum_iterations::Integer=100</code>: Maximum number of EM iterations. Defaults to 100.</p></li><li><p><code>tolerance::Number=1e-4</code>: (Optional) Convergence tolerance for the change in log-likelihood. Defaults to 1e-4.</p></li></ul><p><strong>Returns</strong></p><ul><li>A <code>Distributions.MixtureModel</code> object containing the fitted Gaussian components and their mixing weights.</li></ul>',6)),t(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>i[38]||(i[38]=[s("a",{href:"https://github.com/FriesischScott/UncertaintyQuantification.jl/blob/c78e3bf3fcc1beda726b3bcd3d510694467f9e48/src/inputs/gaussianmixtures.jl#L62-L76",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[38]})])])}const D=h(d,[["render",f]]);export{A as __pageData,D as default};
